<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/2022/11/21/blog/"/>
      <url>/2022/11/21/blog/</url>
      
        <content type="html"><![CDATA[<p>Hexo + Github + Window 个人博客搭建步骤记录+优化</p><a id="more"></a><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>Hexo+GitHub+Window</p><h2 id="二、新建Github仓库"><a href="#二、新建Github仓库" class="headerlink" title="二、新建Github仓库"></a>二、新建Github仓库</h2><p>前置条件：拥有Github账号<br>新建一个与账号名相同的仓库，如仓库名：GitHub账号名.github.io</p><h2 id="三、安装Git"><a href="#三、安装Git" class="headerlink" title="三、安装Git"></a>三、安装Git</h2><p><a href="https://git-scm.com/" target="_blank" rel="noopener">网址</a>，由于官网下载速度较慢，一般都下载不成功，所以选用<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">国内镜像下载</a>，下载后默认安装</p><h2 id="五、安装Node-Js"><a href="#五、安装Node-Js" class="headerlink" title="五、安装Node.Js"></a>五、安装Node.Js</h2><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">网址</a>，默认安装就行</p><h2 id="六、安装Hexo"><a href="#六、安装Hexo" class="headerlink" title="六、安装Hexo"></a>六、安装Hexo</h2><p>前置条件：安装好Git和Node.Js<br>安装步骤官方说明<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">网址</a>，这里是在Window下进行安装</p><h3 id="1-安装Hexo到文件夹"><a href="#1-安装Hexo到文件夹" class="headerlink" title="1.安装Hexo到文件夹"></a>1.安装Hexo到文件夹</h3><p>Hexo<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">网址</a>，获取快捷安装命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>新建文件夹，命名为<code>Github账户名.github.io</code>，点击文件夹，右键<code>Git Bash Here</code>，输入上面命令，接着输入下面命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v    <span class="comment">//查看hexo版本，检验是否安装成功</span></span><br></pre></td></tr></table></figure><h3 id="2-初始化网站"><a href="#2-初始化网站" class="headerlink" title="2.初始化网站"></a>2.初始化网站</h3><p>安装好Hexo后，使用下面命令（同样是在<code>账户名.github.io</code>目录下进行）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line">$ npm install  <span class="comment">//安装依赖</span></span><br><span class="line">$ npm install hexo-server --save  <span class="comment">//搭建本地服务器所需插件</span></span><br><span class="line">$ npm install hexo-deployer-git --save  <span class="comment">//使用git方式进行部署博客所需插件</span></span><br></pre></td></tr></table></figure><p>所需文件生成后，根据<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">网址</a>了解每个文件的含义</p><h3 id="3-生成静态网页"><a href="#3-生成静态网页" class="headerlink" title="3.生成静态网页"></a>3.生成静态网页</h3><p>输入下面命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g  <span class="comment">//生成静态页面</span></span><br><span class="line">$ hexo server  <span class="comment">//启动服务器，若成功，访问http://localhost:4000即可看到网页</span></span><br></pre></td></tr></table></figure><h2 id="七、Git与Github关联"><a href="#七、Git与Github关联" class="headerlink" title="七、Git与Github关联"></a>七、Git与Github关联</h2><p>前置条件：安装好Git、创建好Github仓库</p><h3 id="1-设置账号信息"><a href="#1-设置账号信息" class="headerlink" title="1.设置账号信息"></a>1.设置账号信息</h3><p>输入下面命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"your Github_Name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"your_email@youremail.com"</span></span><br></pre></td></tr></table></figure><h3 id="2-检查电脑上是否存在SSH-key"><a href="#2-检查电脑上是否存在SSH-key" class="headerlink" title="2.检查电脑上是否存在SSH key"></a>2.检查电脑上是否存在SSH key</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br></pre></td></tr></table></figure><h3 id="3-备份并移除原来的SSH-key设置-如果不移除，新生成的ssh-key也可以覆盖原来的"><a href="#3-备份并移除原来的SSH-key设置-如果不移除，新生成的ssh-key也可以覆盖原来的" class="headerlink" title="3.备份并移除原来的SSH key设置(如果不移除，新生成的ssh key也可以覆盖原来的)"></a>3.备份并移除原来的SSH key设置(如果不移除，新生成的ssh key也可以覆盖原来的)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">configid_rsaid_rsa.pubknown_hosts</span><br><span class="line">$ mkdir key_backup</span><br><span class="line">$ cp id_rsa* key_backup</span><br><span class="line">$ rm id_rsa*</span><br></pre></td></tr></table></figure><h3 id="4-生成新的SSH-key"><a href="#4-生成新的SSH-key" class="headerlink" title="4.生成新的SSH key"></a>4.生成新的SSH key</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮件地址@youremail.com"</span></span><br><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key pair.</span><br><span class="line"><span class="function">Enter file in which to save the <span class="title">key</span> <span class="params">(/Users/your_user_directory/.ssh/id_rsa)</span>:&lt;回车就好&gt;</span></span><br></pre></td></tr></table></figure><p>系统会要求输入加密串（可以不输，直接回车，这里输入的密码用于本地上传文件到Github上时验证）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Enter <span class="title">passphrase</span> <span class="params">(empty <span class="keyword">for</span> no passphrase)</span>:&lt;输入加密串&gt;</span></span><br><span class="line"><span class="function">Enter same passphrase again:&lt;再次输入加密串&gt;</span></span><br></pre></td></tr></table></figure><p>若出现<code>the key&#39;s randomart image is:</code>则生成SSH key 成功</p><h3 id="5-添加SSH-key到Github"><a href="#5-添加SSH-key到Github" class="headerlink" title="5.添加SSH key到Github"></a>5.添加SSH key到Github</h3><p>用文本编辑工具打开id_rsa.pub文件，这个文件在C盘-&gt;用户名-&gt;.ssh文件夹里面，文件内容就是上一步生成的SSH key，复制下来。<br>打开Github创建的仓库，点击Setting，点击左边选项栏Deploy keys，将刚才复制的内容粘贴到key一栏<br>Allow Write Access打上勾</p><h3 id="6-测试是否成功"><a href="#6-测试是否成功" class="headerlink" title="6.测试是否成功"></a>6.测试是否成功</h3><p>输入下面命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git<span class="meta">@github</span>.com</span><br></pre></td></tr></table></figure><p>程序会询问你，此时输入<code>yes</code>,如果输入后出现了包含<code>Hi</code>的欢迎字样，则成功</p><h2 id="八、部署到Github"><a href="#八、部署到Github" class="headerlink" title="八、部署到Github"></a>八、部署到Github</h2><p>修改项目文件夹里的<code>_config.yml</code>，设置如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git<span class="meta">@github</span>.com:账户名/账户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>注意这里冒号后面要空一个字符<br>Git Bash 定位到本地博客，输入下面命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g  <span class="comment">//生成静态页面</span></span><br><span class="line">$ hexo server  <span class="comment">//启动服务器，若成功，访问http://localhost:4000即可</span></span><br><span class="line">$ hexo deploy  <span class="comment">//部署</span></span><br></pre></td></tr></table></figure><h2 id="九、域名绑定"><a href="#九、域名绑定" class="headerlink" title="九、域名绑定"></a>九、域名绑定</h2><h3 id="1-点击Github的setting"><a href="#1-点击Github的setting" class="headerlink" title="1.点击Github的setting"></a>1.点击Github的<code>setting</code></h3><p>找到<code>GitHub Pages</code>里的<code>Custom domain</code>，填上域名，这时候项目根目录应该会出现一个名为CNAME的文件了。打开本地博客/source目录，新建CNAME文件，注意没有后缀。然后在里面写上你的域名（如:test.com,不需要添加http/www等前缀），保存。最后运行hexo g、hexo d上传到github</p><h3 id="2-根据IP地址添加解析"><a href="#2-根据IP地址添加解析" class="headerlink" title="2.根据IP地址添加解析"></a>2.根据IP地址添加解析</h3><p>打开cmd,Ping 账号名.github.io,获得IP地址<br>添加A类型，主机记录分别为@和WWW的两条解析，记录值为上面IP地址</p><h3 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h3><p>访问网址，确认是否成功</p><h2 id="十、网站优化"><a href="#十、网站优化" class="headerlink" title="十、网站优化"></a>十、网站优化</h2><h3 id="1、博客文章无法显示图片"><a href="#1、博客文章无法显示图片" class="headerlink" title="1、博客文章无法显示图片"></a>1、博客文章无法显示图片</h3><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>上传的markdown中引用的是电脑本地的图片，而这些图片并没有上传到GitHub上，所以无法显示图片</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><ol><li>修改系统配置文件中<code>post_asset_folder</code>为<code>true</code>，此时新建博客后，会出现一个和文件同名的文件夹</li><li>安装插件：<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></li><li>文章在引用图片时，采用相对路径</li></ol><p>此办法将图片也上传到GitHub上，并用相对路径来调用图片，问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之datetime模块</title>
      <link href="/2021/01/08/python-datetime/"/>
      <url>/2021/01/08/python-datetime/</url>
      
        <content type="html"><![CDATA[<ol><li>初识time</li><li>初识datetime</li><li>计算两个时间点之间相差多少天、小时、分、秒</li></ol><a id="more"></a><h3 id="1、初识time"><a href="#1、初识time" class="headerlink" title="1、初识time"></a>1、初识time</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前时间的时间戳，python中时间戳整数位是秒数，Java和JavaScript中整数位是毫秒数</span></span><br><span class="line">t1 = time.time()</span><br><span class="line">print(t1)</span><br><span class="line"><span class="comment"># 输出：1610114801.1910043</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将时间戳转换为当前时区的struct_time，gmtime()方法将一个时间戳转为UTC时区（0时区）的struct_time</span></span><br><span class="line"><span class="comment"># tm_wday:0-6(0表示周1)，tm_yday(一年中的第几天),tm_isdst:夏令时</span></span><br><span class="line">t2 = time.localtime(t1)</span><br><span class="line">print(t2)</span><br><span class="line"><span class="comment"># 输出：time.struct_time(tm_year=2021, tm_mon=1, tm_mday=8, tm_hour=22, tm_min=6, tm_sec=41, tm_wday=4, tm_yday=8, tm_isdst=0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将一个struct_time 转为时间戳</span></span><br><span class="line">t3 = time.mktime(t2)</span><br><span class="line">print(t3)</span><br><span class="line"><span class="comment"># 输出：1610114801.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将一个代表时间的元组或者strut_time 转为 格式化的字符串</span></span><br><span class="line">t4 = time.strftime(<span class="string">'%Y-%m-%d %X'</span>, time.localtime())</span><br><span class="line">print(t4)</span><br><span class="line"><span class="comment"># 输出：2021-01-08 22:06:41</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将一个格式化的字符串转为 strut_time</span></span><br><span class="line">t5 = time.strptime(t4, <span class="string">'%Y-%m-%d %X'</span>)</span><br><span class="line">print(t5)</span><br><span class="line"><span class="comment"># 输出：time.struct_time(tm_year=2021, tm_mon=1, tm_mday=8, tm_hour=22, tm_min=6, tm_sec=41, tm_wday=4, tm_yday=8, tm_isdst=-1)</span></span><br></pre></td></tr></table></figure><h3 id="2、初识datetime"><a href="#2、初识datetime" class="headerlink" title="2、初识datetime"></a>2、初识datetime</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime,timedelta</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前日期和时间</span></span><br><span class="line">dt1 = datetime.now()</span><br><span class="line">print(dt1)</span><br><span class="line"><span class="comment"># 输出：2021-01-08 21:30:19.164887</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前时间去掉毫秒数</span></span><br><span class="line">print(datetime.now().replace(microsecond=<span class="number">0</span>))</span><br><span class="line"><span class="comment"># 输出：2021-01-08 21:30:19</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指定日期和时间</span></span><br><span class="line">dt2 = datetime(<span class="number">2021</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">54</span>)</span><br><span class="line">print(dt2)</span><br><span class="line"><span class="comment"># 输出：2021-03-04 11:15:54</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># datetime 转为 timestamp</span></span><br><span class="line">ts = dt2.timestamp()</span><br><span class="line">print(ts)</span><br><span class="line"><span class="comment"># 输出：1614827754.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># timestamp 转为 datetime</span></span><br><span class="line">dt3 = datetime.fromtimestamp(ts)</span><br><span class="line">print(dt3)</span><br><span class="line"><span class="comment"># 输出：2021-03-04 11:15:54</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># str 转为 datetime</span></span><br><span class="line">dt4 = datetime.strptime(<span class="string">'2021-9-23 18:46:34'</span>, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">print(dt4)</span><br><span class="line"><span class="comment"># 输出：2021-09-23 18:46:34</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># datetime 转为 str</span></span><br><span class="line">dt5 = dt4.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">print(dt5)</span><br><span class="line"><span class="comment"># 输出：2021-09-23 18:46:34</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># datetime 加减</span></span><br><span class="line">dt6 = dt1 + timedelta(days=<span class="number">1</span>,hours=<span class="number">1</span>,minutes=<span class="number">1</span>,seconds=<span class="number">1</span>)</span><br><span class="line">print(dt6)</span><br><span class="line"><span class="comment"># 输出：2021-01-09 22:31:20.164887</span></span><br></pre></td></tr></table></figure><h3 id="3、计算两个时间点之间相差多少天、小时、分、秒"><a href="#3、计算两个时间点之间相差多少天、小时、分、秒" class="headerlink" title="3、计算两个时间点之间相差多少天、小时、分、秒"></a>3、计算两个时间点之间相差多少天、小时、分、秒</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">start_time = <span class="string">'2020-12-14 09:13:44'</span></span><br><span class="line"><span class="comment"># 获得datetime类型的当前时间作为结束时间</span></span><br><span class="line">end_time = datetime.now().replace(microsecond=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 将开始时间转为datetime</span></span><br><span class="line">start_time1 = datetime.strptime(start_time, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"><span class="comment"># 获得两个日期之间相差的秒数</span></span><br><span class="line">seconds = (end_time-start_time1).total_seconds()</span><br><span class="line"><span class="keyword">if</span> seconds&lt;<span class="number">0</span>:</span><br><span class="line">    seconds = -seconds</span><br><span class="line"><span class="comment"># 根据相差的秒数转换成天、小时、分钟、秒</span></span><br><span class="line">str_day = str(seconds // <span class="number">86400</span>)[:<span class="number">-2</span>]</span><br><span class="line">str_hours = str((seconds % <span class="number">86400</span>) // <span class="number">3600</span>)[:<span class="number">-2</span>]</span><br><span class="line">str_minute = str(((seconds % <span class="number">86400</span>) % <span class="number">3600</span>) // <span class="number">60</span>)[:<span class="number">-2</span>]</span><br><span class="line">str_seconds = str(((seconds % <span class="number">86400</span>) % <span class="number">60</span>) % <span class="number">60</span>)[:<span class="number">-2</span>]</span><br><span class="line"><span class="comment"># 打印</span></span><br><span class="line">print(<span class="string">'开始时间：'</span> + str(start_time1))</span><br><span class="line">print(<span class="string">'结束时间：'</span> + str(end_time))</span><br><span class="line">print(<span class="string">'相差：'</span> + str_day + <span class="string">'天'</span> + str_hours + <span class="string">'小时'</span>+ str_minute + <span class="string">'分钟'</span> + str_seconds+ <span class="string">'秒'</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">输出：</span></span><br><span class="line"><span class="string">开始时间：2020-12-14 09:13:44</span></span><br><span class="line"><span class="string">结束时间：2021-01-08 22:10:30</span></span><br><span class="line"><span class="string">相差：25天12小时56分钟46秒</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下安装JDK</title>
      <link href="/2021/01/08/linux-jdk/"/>
      <url>/2021/01/08/linux-jdk/</url>
      
        <content type="html"><![CDATA[<p>通过rpm包安装</p><a id="more"></a><h3 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h3><p>1、从华为开源镜像网站中下载jdk的rpm包</p><p>2、在当前用户home目录下新建一个downloadfile，用来保存rpm包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[mutong@localhost ~]$ mkdir downloadfile</span><br></pre></td></tr></table></figure><p>3、利用xftp将rpm包从Windows传输到Linux中的downloadfile目录下</p><p>4、在/usr/local目录下新建一个目录java/jdk，用来保存安装的jdk</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[mutong@localhost local]$ mkdir -p java/jdk</span><br></pre></td></tr></table></figure><p>5、rpm命令进行安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[mutong@localhost ~]$ sudo rpm -ivh --prefix=/usr/local/java/jdk jdk-8u202-linux-x64.rpm</span><br></pre></td></tr></table></figure><p>6、配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[mutong@localhost ~]$ vim /etc/profile</span><br><span class="line"># /etc/profile</span><br><span class="line"># jdk环境</span><br><span class="line"></span><br><span class="line">JAVA_HOME=/usr/local/java/jdk/jdk1.8.0_202-amd64</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib.tools.jar</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export JAVA_HOME CLASSPATH PATH</span><br></pre></td></tr></table></figure><p>7、重新加载配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[mutong@localhost ~]$ source /etc/profile</span><br></pre></td></tr></table></figure><p>8、测试是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mutong@localhost ~]$ java -version</span><br><span class="line">java version &quot;1.8.0_202&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_202-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装步骤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之os模块</title>
      <link href="/2021/01/06/python-os/"/>
      <url>/2021/01/06/python-os/</url>
      
        <content type="html"><![CDATA[<p>初识os模块</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getdemo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 获取当前工作目录</span></span><br><span class="line">    print(os.getcwd())</span><br><span class="line">    <span class="comment"># 输出结果：F:\workspace\day2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回文件列表</span></span><br><span class="line">    print(os.listdir(<span class="string">'.'</span>))</span><br><span class="line">    <span class="comment"># 输出结果：['.idea', 'ershoufang.txt', 'main.py', 'osfile', 'python_os.py', 'python_os1.py', 'selenium1.py', 'venv']</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建文件夹</span></span><br><span class="line">    <span class="comment"># os.mkdir('./osfile')</span></span><br><span class="line">    <span class="comment"># 输出结果：在当前目录下创建了一个名为osfile的目录</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取系统环境变量并打印</span></span><br><span class="line">    <span class="comment"># for i in (os.getenv('PATH').split(';')):</span></span><br><span class="line">    <span class="comment">#     print(i)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 表示当前文件夹</span></span><br><span class="line">    print(os.curdir)</span><br><span class="line">    <span class="comment"># 输出结果：.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 表示上一层文件夹</span></span><br><span class="line">    print(os.pardir)</span><br><span class="line">    <span class="comment"># 输出结果：..</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取路径间间隔符</span></span><br><span class="line">    print(os.sep)</span><br><span class="line">    <span class="comment"># 输出结果：\</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将相对路径转为绝对路径</span></span><br><span class="line">    print(os.path.abspath(<span class="string">'./os_path'</span>))</span><br><span class="line">    <span class="comment"># 输出结果：F:\workspace\day2\os_path</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取当前脚本的绝对路径</span></span><br><span class="line">    print(os.path.abspath(__file__))</span><br><span class="line">    <span class="comment"># 输出结果：F:\workspace\day2\python_os.py</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取路径中的目录部分</span></span><br><span class="line">    print(os.path.dirname(__file__))</span><br><span class="line">    <span class="comment"># F:/workspace/day2</span></span><br><span class="line">    print(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">    <span class="comment"># 输出结果：F:\workspace\day2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取目录中的主体部分</span></span><br><span class="line">    print(os.path.basename(os.path.abspath(__file__)))</span><br><span class="line">    <span class="comment"># 输出结果：python_os.py</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将路径切割为目录部分和主体部分</span></span><br><span class="line">    print(os.path.split(os.path.abspath(__file__)))</span><br><span class="line">    <span class="comment"># 输出结果：('F:\\workspace\\day2', 'python_os.py')</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将两个路径合为一个</span></span><br><span class="line">    print(os.path.join(os.path.abspath(<span class="string">'./osfile'</span>), os.pardir))</span><br><span class="line">    <span class="comment"># 输出结果: F:\workspace\day2\osfile\..</span></span><br><span class="line">    print(os.path.join(os.path.dirname(__file__), os.pardir))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检测路径是否存在</span></span><br><span class="line">    print(os.path.exists(<span class="string">'./osfile'</span>))</span><br><span class="line">    <span class="comment"># 输出结果： True</span></span><br><span class="line"></span><br><span class="line">    path_dir = os.path.join(os.path.dirname(__file__), os.pardir)</span><br><span class="line">    print(path_dir)</span><br><span class="line">    <span class="comment"># 输出结果：F:/workspace/day2\..</span></span><br><span class="line">    path_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))</span><br><span class="line">    print(path_dir)</span><br><span class="line">    <span class="comment"># 输出结果： F:\workspace</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    getdemo()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战练习（四）</title>
      <link href="/2020/12/30/python-pachong-test4/"/>
      <url>/2020/12/30/python-pachong-test4/</url>
      
        <content type="html"><![CDATA[<p>爬取代理ip，检测ip有效性，保存有效的ip</p><a id="more"></a><h3 id="一、知识点"><a href="#一、知识点" class="headerlink" title="一、知识点"></a>一、知识点</h3><blockquote><p>设置代理</p></blockquote><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><blockquote><ol><li>获取每页url</li><li>获取当前页数据，得到代理ip</li><li>检查代理ip有效性</li><li>将有效的代理ip进行保存</li></ol></blockquote><h3 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 爬取代理ip并检测代理ip的有效性，将有效的代理ip保存</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_deal</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    # 分页处理，返回每页的url</span></span><br><span class="line"><span class="string">    :return: page_url_list</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    model = <span class="string">'http://www.nimadaili.com/https/%d/'</span></span><br><span class="line">    page_url_list = []</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">2</span>):</span><br><span class="line">        page_url = format(model % n)</span><br><span class="line">        page_url_list.append(page_url)</span><br><span class="line">        <span class="comment"># print(page_url)</span></span><br><span class="line">    <span class="keyword">return</span> page_url_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_header</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_url</span><span class="params">(ip)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    # 检查ip地址可用性</span></span><br><span class="line"><span class="string">    :param ip:</span></span><br><span class="line"><span class="string">    :return: ip</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    proxy = &#123;</span><br><span class="line">        <span class="string">'https'</span>: ip</span><br><span class="line">    &#125;</span><br><span class="line">    print(<span class="string">'ip检测中，请稍等:'</span> + ip)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 随便请求一个https地址的资源</span></span><br><span class="line">        response = requests.get(url=<span class="string">'https://www.baidu.com'</span>, headers=get_header(), proxies=proxy, timeout=<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment"># 存在异常</span></span><br><span class="line">        print(<span class="string">'检测结果：ip不合适'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 访问资源成功</span></span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            print(<span class="string">'检测结果：ip合适'</span>)</span><br><span class="line">            <span class="keyword">return</span> ip</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'检测结果：ip不合适'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_ip</span><span class="params">(ip_list)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    打印存放的ip</span></span><br><span class="line"><span class="string">    :param ip_list:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">if</span> len(ip_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'没有合适的ip'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> ip <span class="keyword">in</span> ip_list:</span><br><span class="line">            print(ip)</span><br><span class="line">        print(<span class="string">'打印完毕，一共&#123;0&#125;条'</span>.format(len(ip_list)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 定义一个有效的代理ip</span></span><br><span class="line">    proxy = &#123;</span><br><span class="line">        <span class="string">'https'</span>: <span class="string">'150.138.253.71:808'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 获取每页的url</span></span><br><span class="line">    page_url_list = page_deal()</span><br><span class="line">    <span class="comment"># 定义一个列表，存放有效的ip</span></span><br><span class="line">    ip_list = []</span><br><span class="line">    <span class="comment"># 处理每一页数据</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> page_url_list:</span><br><span class="line">        <span class="comment"># 获取当前页网页数据</span></span><br><span class="line">        page_text = requests.get(url, get_header(), proxies=proxy).text</span><br><span class="line">        <span class="comment"># 解析网页数据</span></span><br><span class="line">        tree = etree.HTML(page_text)</span><br><span class="line">        <span class="comment"># 处理并得到目标数据</span></span><br><span class="line">        tr_list = tree.xpath(<span class="string">'//table[@class="fl-table"]/tbody/tr'</span>)</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> tr_list:</span><br><span class="line">            ip = tr.xpath(<span class="string">'./td[1]/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 如果ip地址有效</span></span><br><span class="line">            <span class="keyword">if</span> check_url(ip) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="comment"># 将ip地址存入列表中</span></span><br><span class="line">                ip_list.append(ip)</span><br><span class="line">                print(<span class="string">'ip保存成功:'</span> + ip)</span><br><span class="line">    print(<span class="string">'ip检测完毕\n'</span>)</span><br><span class="line">    <span class="comment"># 打印ip</span></span><br><span class="line">    print_ip(ip_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战练习（三）</title>
      <link href="/2020/12/28/python-pachong-test3/"/>
      <url>/2020/12/28/python-pachong-test3/</url>
      
        <content type="html"><![CDATA[<p>爬取4k图片</p><a id="more"></a><h3 id="一、知识点"><a href="#一、知识点" class="headerlink" title="一、知识点"></a>一、知识点</h3><blockquote><p>xpath解析数据</p></blockquote><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><blockquote><ol><li>获取网页数据</li><li>解析网页结构</li><li>通过xpath获取目标数据</li><li>处理数据并保存</li></ol></blockquote><h3 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 爬取4k图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://pic.netbian.com/4kfengjing/"</span></span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_header</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    主要实现代码</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment"># 1.获取网页数据</span></span><br><span class="line">    response = requests.get(get_url(), get_header())</span><br><span class="line">    <span class="comment"># 2.将获取的内容转码为gbk</span></span><br><span class="line">    response.encoding = <span class="string">'gbk'</span></span><br><span class="line">    <span class="comment"># 3.将获取的内容加载为html格式</span></span><br><span class="line">    tree = etree.HTML(response.text)</span><br><span class="line">    <span class="comment"># 4.创建一个文件用来保存图片</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'./4kfengjing'</span>):</span><br><span class="line">        os.mkdir(<span class="string">'./4kfengjing'</span>)</span><br><span class="line">    <span class="comment"># 5.通过xpath处理网页数据</span></span><br><span class="line">    li_list = tree.xpath(<span class="string">'//div[@class="slist"]/ul/li'</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">        <span class="comment"># 5.1 获取图片url</span></span><br><span class="line">        img_src = <span class="string">'http://pic.netbian.com/'</span>+li.xpath(<span class="string">'./a/img/@src'</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 5.2 获取图片名称</span></span><br><span class="line">        img_name = li.xpath(<span class="string">'./a/b/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 5.2 根据图片url，请求到图片数据</span></span><br><span class="line">        img_data = requests.get(img_src, get_header()).content</span><br><span class="line">        <span class="comment"># 5.3 构建图片保存路径</span></span><br><span class="line">        img_path = <span class="string">'4kfengjing/'</span> + img_name + <span class="string">'.jpg'</span></span><br><span class="line">        <span class="comment"># 5.4 进行保存</span></span><br><span class="line">        <span class="keyword">with</span> open(img_path, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(img_data)</span><br><span class="line">            print(img_name + <span class="string">'-----下载成功'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    run_main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战练习（二）</title>
      <link href="/2020/12/20/python-pachong-test2/"/>
      <url>/2020/12/20/python-pachong-test2/</url>
      
        <content type="html"><![CDATA[<p>爬取三国演义章节名称及内容</p><a id="more"></a><h3 id="一、知识点"><a href="#一、知识点" class="headerlink" title="一、知识点"></a>一、知识点</h3><blockquote><p>bs4解析数据</p></blockquote><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><blockquote><ol><li>请求章节页数据</li><li>bs4处理章节页数据，获得章节名称及内容的url</li><li>请求章节内容数据</li><li>bs4处理章节内容数据，获得章节内容</li><li>将章节内容存到文件中</li></ol></blockquote><h3 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  爬取三国演义章节标题和内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://www.shicimingju.com/book/sanguoyanyi.html"</span></span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_header</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json; charset=utf-8'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_main</span><span class="params">()</span>:</span></span><br><span class="line">    page_text = requests.get(get_url(),get_header()).text</span><br><span class="line">    <span class="comment"># 实例化一个BeautifulSoup对象，以lxml方式解析</span></span><br><span class="line">    soup = BeautifulSoup(page_text, <span class="string">'lxml'</span>)</span><br><span class="line">    <span class="comment"># 获取含有章节名称和详情url的li列表</span></span><br><span class="line">    li_list = soup.select(<span class="string">'.book-mulu &gt; ul &gt; li'</span>)</span><br><span class="line">    <span class="comment"># 打开文件</span></span><br><span class="line">    fp = open(<span class="string">'./sanguoyanyi.txt'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># 处理页面数据</span></span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="comment"># 获取章节名</span></span><br><span class="line">        chapter_name = li.a.string</span><br><span class="line">        <span class="comment"># 获取章节内容的url</span></span><br><span class="line">        content_url = <span class="string">"https://www.shicimingju.com"</span> + li.a[<span class="string">'href'</span>]</span><br><span class="line">        <span class="comment"># 请求章节内容</span></span><br><span class="line">        content_text = requests.get(content_url, get_header()).text</span><br><span class="line">        <span class="comment"># 处理详情数据，获取目标内容</span></span><br><span class="line">        detail_soup = BeautifulSoup(content_text, <span class="string">'lxml'</span>)</span><br><span class="line">        chapter_content = detail_soup.find(<span class="string">'div'</span>,class_=<span class="string">'chapter_content'</span>).text</span><br><span class="line">        <span class="comment"># 将内容写入文件</span></span><br><span class="line">        fp.write(chapter_name + <span class="string">":\n"</span> + chapter_content + <span class="string">"\n"</span>)</span><br><span class="line">        print(<span class="string">"爬取成功"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    run_main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python问题处理</title>
      <link href="/2020/12/20/python-error-deal/"/>
      <url>/2020/12/20/python-error-deal/</url>
      
        <content type="html"><![CDATA[<ol><li>更新pip失败</li><li>安装超时</li></ol><a id="more"></a><h4 id="一、python-更新pip失败"><a href="#一、python-更新pip失败" class="headerlink" title="一、python 更新pip失败"></a>一、python 更新pip失败</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看pip版本</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">pip -V</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">pip show pip</span><br><span class="line"><span class="comment"># 更新pip</span></span><br><span class="line">python -m  pip install --upgrade pip</span><br><span class="line"><span class="comment"># 使用上述命名更新pip失败，可以使用下面这个命令</span></span><br><span class="line">python -m pip install -U --force-reinstall pip</span><br></pre></td></tr></table></figure><h4 id="二、python安装时超时"><a href="#二、python安装时超时" class="headerlink" title="二、python安装时超时"></a>二、python安装时超时</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报错信息：</span></span><br><span class="line">socket timeout:The read operation timed out</span><br><span class="line"><span class="comment"># 使用国内源解决这个问题</span></span><br><span class="line">pip install 包名 -i https://pypi.douban.com/simple</span><br><span class="line"><span class="comment"># 其他国内源地址</span></span><br><span class="line">-i https://pypi.douban.com/simple</span><br><span class="line">-i https://pypi.doubanio.com/simple</span><br><span class="line">-i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战练习（一）</title>
      <link href="/2020/12/20/python-pachong-test1/"/>
      <url>/2020/12/20/python-pachong-test1/</url>
      
        <content type="html"><![CDATA[<p>爬取糗事百科中的图片</p><a id="more"></a><h3 id="一、运用知识点"><a href="#一、运用知识点" class="headerlink" title="一、运用知识点"></a>一、运用知识点</h3><blockquote><p>正则表达式解析数据</p></blockquote><h3 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h3><blockquote><ol><li>请求糗事百科中的网页数据，数据中含有图片</li><li>利用正则表达式将目标数据提取出来，得到图片的链接列表</li><li>根据图片的链接列表，请求图片数据</li><li>将图片数据存入到文件夹中</li><li>分析不同页面的url，请求多个页面的数据并存储</li></ol></blockquote><h3 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 爬取糗事百科中的图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_header</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    获取headers</span></span><br><span class="line"><span class="string">    :return: headers</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json; charset=utf-8'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_deal</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    分页处理</span></span><br><span class="line"><span class="string">    :return: url_list ,含每页的url地址</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment"># 定义一个通用url模板</span></span><br><span class="line">    model_url = <span class="string">"https://www.qiushibaike.com/imgrank/page/%d/"</span></span><br><span class="line">    <span class="comment"># 定义要爬取的页数范围，表示第1页到第n页</span></span><br><span class="line">    n = <span class="number">2</span></span><br><span class="line">    <span class="comment"># 定义一个url存放列表</span></span><br><span class="line">    url_list = []</span><br><span class="line">    <span class="comment"># 将每页url地址存放在url_list中</span></span><br><span class="line">    <span class="keyword">for</span> pageNum <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        real_url = format(model_url % pageNum)</span><br><span class="line">        url_list.append(real_url)</span><br><span class="line">    <span class="keyword">return</span> url_list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_location</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    创建文件夹，用于保存图片</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'./qiutu'</span>):</span><br><span class="line">        os.mkdir(<span class="string">'./qiutu'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_data</span><span class="params">(url_list)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    读取每页的数据</span></span><br><span class="line"><span class="string">    :param url_list:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> page_url <span class="keyword">in</span> url_list:</span><br><span class="line">        <span class="comment"># 请求网页数据</span></span><br><span class="line">        response = requests.get(page_url, get_header()).text</span><br><span class="line">        <span class="comment"># 用正则表达式提取图片路径</span></span><br><span class="line">        ex= <span class="string">r'&lt;div class="thumb"&gt;.*?&lt;img src="(.*?)" alt=.*?&lt;/div&gt;'</span></span><br><span class="line">        <span class="comment"># 查找出全部符合正则的数据，re.S 即为' . '并且包括换行符在内的任意字符（' . '不包括换行符）</span></span><br><span class="line">        img_list = re.findall(ex, response, re.S)</span><br><span class="line">        <span class="keyword">return</span> img_list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_page_data</span><span class="params">(img_list)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    处理每页数据并保存</span></span><br><span class="line"><span class="string">    :param img_list:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> src <span class="keyword">in</span> img_list:</span><br><span class="line">        <span class="comment"># 拼接图片url</span></span><br><span class="line">        src = <span class="string">"https:"</span> + src</span><br><span class="line">        <span class="comment"># 请求图片的二进制数据</span></span><br><span class="line">        img_data = requests.get(url=src, headers=get_header()).content</span><br><span class="line">        <span class="comment"># 生成图片名称</span></span><br><span class="line">        img_name = src.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="comment"># 图片存储路径</span></span><br><span class="line">        imgpath = <span class="string">'./qiutu/'</span> + img_name</span><br><span class="line">        <span class="comment"># 进行存储</span></span><br><span class="line">        <span class="keyword">with</span> open(imgpath, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(img_data)</span><br><span class="line">            print(img_name, <span class="string">'下载成功'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建一个文件夹，保存所有图片</span></span><br><span class="line">    save_location()</span><br><span class="line">    <span class="comment"># 获取分页url列表</span></span><br><span class="line">    url_list = page_deal()</span><br><span class="line">    <span class="comment"># 获取每页的数据</span></span><br><span class="line">    img_list = get_page_data(url_list)</span><br><span class="line">    <span class="comment"># 处理每页数据并保存</span></span><br><span class="line">    deal_page_data(img_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    run_main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之requests库</title>
      <link href="/2020/12/09/python-requests/"/>
      <url>/2020/12/09/python-requests/</url>
      
        <content type="html"><![CDATA[<ol><li>requests库常用方法</li><li>获取响应内容</li><li>设置超时</li></ol><a id="more"></a><h3 id="一、Request库的常用方法"><a href="#一、Request库的常用方法" class="headerlink" title="一、Request库的常用方法"></a>一、Request库的常用方法</h3><h4 id="（一）requests-request-method-url-kwargs"><a href="#（一）requests-request-method-url-kwargs" class="headerlink" title="（一）requests.request(method,url,**kwargs)"></a>（一）requests.request(method,url,**kwargs)</h4><blockquote><p>method：常用的有<code>get</code>、<code>post</code>、<code>put</code>、<code>delete</code>、<code>head</code>、<code>options</code></p><p>url：请求的URL</p><p>**kwargs：13个控制访问的可选参数</p></blockquote><p>可选参数如下：</p><table><thead><tr><th align="left">参数名</th><th align="left">支持类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">params</td><td align="left">字典、字节序列</td><td align="left">以键值对的方式作为参数加入到URL中</td></tr><tr><td align="left">data</td><td align="left">字典、字节序列、文件</td><td align="left">作为请求的Body内容</td></tr><tr><td align="left">json</td><td align="left">JSON格式的数据</td><td align="left">作为请求的Body内容</td></tr><tr><td align="left">headers</td><td align="left">字典</td><td align="left">HTTP请求头，作为请求对象Header里的内容</td></tr><tr><td align="left">cookies</td><td align="left">字典或CookieJar</td><td align="left">请求中的Cookie</td></tr><tr><td align="left">files</td><td align="left">字典，形式为{filename,fileobject}</td><td align="left">提交传递文件</td></tr><tr><td align="left">auth</td><td align="left">Auth句柄或（user,pass）元组</td><td align="left"></td></tr><tr><td align="left">timeout</td><td align="left">浮点数、元组</td><td align="left">超时时间</td></tr><tr><td align="left">allow_redirects</td><td align="left">True/False</td><td align="left">重定向开关</td></tr><tr><td align="left">proxies</td><td align="left">字典</td><td align="left">将协议映射为代理的URL</td></tr><tr><td align="left">verify</td><td align="left">True/False</td><td align="left">认证SSL证书开关</td></tr><tr><td align="left">stream</td><td align="left">True/False</td><td align="left">默认为True，为True会先下载响应头，为False会立即下载响应头和响应体</td></tr><tr><td align="left">cert</td><td align="left">字符串、元组</td><td align="left">为字符串时是SSL客户端证书文件的路径，为元组时是一个(‘cert’,’key’)二元值对</td></tr></tbody></table><h4 id="（二）request-get-url-params-None-kwargs"><a href="#（二）request-get-url-params-None-kwargs" class="headerlink" title="（二）request.get(url,params=None,**kwargs)"></a>（二）request.get(url,params=None,**kwargs)</h4><p>请求获取URL的资源</p><h4 id="（三）request-head-url-kwargs"><a href="#（三）request-head-url-kwargs" class="headerlink" title="（三）request.head(url,**kwargs)"></a>（三）request.head(url,**kwargs)</h4><p>请求获取响应的头部信息</p><h4 id="（四）request-post-url-params-None-json-None-kwargs"><a href="#（四）request-post-url-params-None-json-None-kwargs" class="headerlink" title="（四）request.post(url,params=None,json=None,**kwargs)"></a>（四）request.post(url,params=None,json=None,**kwargs)</h4><p>请求向URL的资源后附加数据</p><h4 id="（五）request-put-url-data-None-kwargs"><a href="#（五）request-put-url-data-None-kwargs" class="headerlink" title="（五）request.put(url,data=None,**kwargs)"></a>（五）request.put(url,data=None,**kwargs)</h4><p>请求向URL位置存储一个资源，覆盖原URL位置的资源</p><h4 id="（六）request-patch-url-data-None-kwargs"><a href="#（六）request-patch-url-data-None-kwargs" class="headerlink" title="（六）request.patch(url,data=None,**kwargs)"></a>（六）request.patch(url,data=None,**kwargs)</h4><p>请求局部更新URL位置的资源</p><h4 id="（七）request-delete-rul-kwargs"><a href="#（七）request-delete-rul-kwargs" class="headerlink" title="（七）request.delete(rul,**kwargs)"></a>（七）request.delete(rul,**kwargs)</h4><p>请求删除URL位置的资源</p><h3 id="二、响应"><a href="#二、响应" class="headerlink" title="二、响应"></a>二、响应</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 状态码</span></span><br><span class="line">resp.status_code</span><br><span class="line"><span class="comment"># 响应头</span></span><br><span class="line">resp.headers</span><br><span class="line"><span class="comment"># 请求链接</span></span><br><span class="line">resp.url</span><br><span class="line"><span class="comment"># 获取网页编码</span></span><br><span class="line">resp.encoding</span><br><span class="line"><span class="comment"># 获取cookie</span></span><br><span class="line">resp.cookies</span><br><span class="line"><span class="comment"># 获取网页代码</span></span><br><span class="line">resp.text</span><br><span class="line"><span class="comment"># 获取二进制数据</span></span><br><span class="line">resp.content</span><br></pre></td></tr></table></figure><p>如果HTTP请求返回了不成功的状态码，那么<code>req.raise_for_status()</code>会抛出一个HTTPError</p><h3 id="三、超时"><a href="#三、超时" class="headerlink" title="三、超时"></a>三、超时</h3><p>默认情况下，requests不会自动进行超时处理。连接超时指的是客户端到服务端的连接时，request会等待的秒数。读取超时指的是客户端等待服务器发送请求的时间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种方式，单独设置超时时间，包括连接和读取</span></span><br><span class="line">request.get(<span class="string">'www.baidu.com'</span>,timeout=<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 第二种方式，分别作为连接和读取的超时时间</span></span><br><span class="line">request.get(<span class="string">'www.baidu.com'</span>,timeout=(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line"><span class="comment"># 第三种方式，request永远等待</span></span><br><span class="line">request.get(<span class="string">'www.baidu.com'</span>,timeout=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL练习（1）</title>
      <link href="/2020/11/10/mysqlTest1/"/>
      <url>/2020/11/10/mysqlTest1/</url>
      
        <content type="html"><![CDATA[<p>查询工资第二高的记录</p><p>查询超过经理收入的员工</p><p>查找重复的电子邮箱</p><p>找出从不订购的客户</p><p>删除重复的电子邮箱</p><a id="more"></a><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>查询工资为第二高的记录，如果没有第二高的记录则返回<code>null</code></p><p>例如表<code>Employee</code>，应该查询出200</p><table><thead><tr><th align="center">id</th><th align="center">salary</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">100</td></tr><tr><td align="center">2</td><td align="center">200</td></tr><tr><td align="center">3</td><td align="center">300</td></tr></tbody></table><h3 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h3><p>利用将工资降序排序然后去第二条记录，重点在于如何处理当不存在第二高的工资时返回null。一是将表作为临时表，二是用IFNULL()函数</p><h3 id="参考SQL："><a href="#参考SQL：" class="headerlink" title="参考SQL："></a>参考SQL：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># SQL 1</span><br><span class="line">select (</span><br><span class="line">    select distinct salary from Employee order by salary Desc limit 1 offset 1</span><br><span class="line">) as SecondHignestSalary</span><br><span class="line"># SQL 2</span><br><span class="line">SELECT </span><br><span class="line">    IFNULL(</span><br><span class="line">      (SELECT DISTINCT Salary </span><br><span class="line">       FROM Employee </span><br><span class="line">       ORDER BY Salary DESC </span><br><span class="line">        LIMIT 1 OFFSET 1),</span><br><span class="line">    NULL) AS SecondHighnestSalary</span><br></pre></td></tr></table></figure><h3 id="题目描述：-1"><a href="#题目描述：-1" class="headerlink" title="题目描述："></a>题目描述：</h3><p><code>Employee</code> 表包含所有员工，他们的经理也属于员工。每个员工都有一个 Id，此外还有一列对应员工的经理的 Id</p><table><thead><tr><th>Id</th><th>Name</th><th>Salary</th><th>ManagerId</th></tr></thead><tbody><tr><td>1</td><td>Joe</td><td>70000</td><td>3</td></tr><tr><td>2</td><td>Henry</td><td>80000</td><td>4</td></tr><tr><td>3</td><td>Sam</td><td>60000</td><td>null</td></tr><tr><td>4</td><td>Max</td><td>90000</td><td>null</td></tr></tbody></table><h3 id="解题思路：-1"><a href="#解题思路：-1" class="headerlink" title="解题思路："></a>解题思路：</h3><p>采用自连接方式查询</p><h3 id="参考SQL"><a href="#参考SQL" class="headerlink" title="参考SQL:"></a>参考SQL:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.name </span><br><span class="line"><span class="keyword">from</span> Employee a,Employee b</span><br><span class="line"><span class="keyword">where</span> a.ManagerId = b.Id <span class="keyword">and</span> a.Salary&gt;b.Salary;</span><br></pre></td></tr></table></figure><h3 id="题目描述：-2"><a href="#题目描述：-2" class="headerlink" title="题目描述："></a>题目描述：</h3><p>编写一个 SQL 查询，查找 <code>Person</code> 表中所有重复的电子邮箱</p><table><thead><tr><th>Id</th><th>Email</th></tr></thead><tbody><tr><td>1</td><td><a href="mailto:a@b.com" target="_blank" rel="noopener">a@b.com</a></td></tr><tr><td>2</td><td><a href="mailto:c@b.com" target="_blank" rel="noopener">c@b.com</a></td></tr><tr><td>3</td><td><a href="mailto:a@b.com" target="_blank" rel="noopener">a@b.com</a></td></tr></tbody></table><h3 id="解题思路：-2"><a href="#解题思路：-2" class="headerlink" title="解题思路："></a>解题思路：</h3><p>用group by 和having</p><h3 id="参考SQL-1"><a href="#参考SQL-1" class="headerlink" title="参考SQL:"></a>参考SQL:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Email </span><br><span class="line"><span class="keyword">from</span> Person </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Email </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(Email)&gt;<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="题目描述：-3"><a href="#题目描述：-3" class="headerlink" title="题目描述："></a>题目描述：</h3><p>某网站包含两个表，<code>Customers</code> 表和 <code>Orders</code> 表。编写一个 SQL 查询，找出所有从不订购任何东西的客户</p><p>Customers</p><table><thead><tr><th>Id</th><th>Name</th></tr></thead><tbody><tr><td>1</td><td>Joe</td></tr><tr><td>2</td><td>Henry</td></tr><tr><td>3</td><td>Sam</td></tr><tr><td>4</td><td>Max</td></tr></tbody></table><p>Orders</p><table><thead><tr><th>Id</th><th>CustomerId</th></tr></thead><tbody><tr><td>1</td><td>3</td></tr><tr><td>2</td><td>1</td></tr></tbody></table><h3 id="解题思路：-3"><a href="#解题思路：-3" class="headerlink" title="解题思路："></a>解题思路：</h3><p>利用Not in</p><h3 id="参考SQL-2"><a href="#参考SQL-2" class="headerlink" title="参考SQL:"></a>参考SQL:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">Name</span> </span><br><span class="line"><span class="keyword">from</span> Customers </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">Id</span> </span><br><span class="line"><span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> CustomersId <span class="keyword">from</span> Orders)</span><br></pre></td></tr></table></figure><h3 id="题目描述：-4"><a href="#题目描述：-4" class="headerlink" title="题目描述："></a>题目描述：</h3><p>编写一个 SQL 查询，来删除 <code>Person</code> 表中所有重复的电子邮箱，重复的邮箱里只保留 <strong>Id</strong> <em>最小</em> 的那个</p><table><thead><tr><th>Id</th><th>Email</th></tr></thead><tbody><tr><td>1</td><td><a href="mailto:john@example.com" target="_blank" rel="noopener">john@example.com</a></td></tr><tr><td>2</td><td><a href="mailto:bob@example.com" target="_blank" rel="noopener">bob@example.com</a></td></tr><tr><td>3</td><td><a href="mailto:john@example.com" target="_blank" rel="noopener">john@example.com</a></td></tr></tbody></table><h3 id="解题思路：-4"><a href="#解题思路：-4" class="headerlink" title="解题思路："></a>解题思路：</h3><p>自连接找出id最小的且有重复的那个邮箱</p><h3 id="参考SQL-3"><a href="#参考SQL-3" class="headerlink" title="参考SQL:"></a>参考SQL:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除满足where条件的p1</span></span><br><span class="line"><span class="keyword">delete</span> p1 </span><br><span class="line"><span class="keyword">from</span> Person p1,Person p2</span><br><span class="line"><span class="keyword">where</span> p1.Email=p2.Email <span class="keyword">and</span> p1.Id&gt;p2.Id</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 力扣刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb</title>
      <link href="/2020/08/17/adb/"/>
      <url>/2020/08/17/adb/</url>
      
        <content type="html"><![CDATA[<ol><li><p>adb连接模拟器</p></li><li><p>adb连接手机</p></li><li><p>adb查看日志</p></li></ol><a id="more"></a><h3 id="安装adb"><a href="#安装adb" class="headerlink" title="安装adb"></a>安装adb</h3><p><a href="https://developer.android.google.cn/studio/releases/platform-tools.html" target="_blank" rel="noopener">https://developer.android.google.cn/studio/releases/platform-tools.html</a></p><h3 id="adb连接mumu模拟器"><a href="#adb连接mumu模拟器" class="headerlink" title="adb连接mumu模拟器"></a>adb连接mumu模拟器</h3><p>运行cmd，切换到adb命令目录或先配置好环境变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect 127.0.0.1:7555</span><br></pre></td></tr></table></figure><h3 id="查看设备是否已连接"><a href="#查看设备是否已连接" class="headerlink" title="查看设备是否已连接"></a>查看设备是否已连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure><h3 id="查看设备连接状态"><a href="#查看设备连接状态" class="headerlink" title="查看设备连接状态"></a>查看设备连接状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb get-state</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">选项</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">offline</td><td align="center">设备连接异常</td></tr><tr><td align="center">device</td><td align="center">正常</td></tr><tr><td align="center">unknown</td><td align="center">没有连接设备</td></tr></tbody></table><h3 id="adb安装apk文件"><a href="#adb安装apk文件" class="headerlink" title="adb安装apk文件"></a>adb安装apk文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install apk地址</span><br></pre></td></tr></table></figure><h3 id="adb-抓取日志"><a href="#adb-抓取日志" class="headerlink" title="adb 抓取日志"></a>adb 抓取日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat</span><br></pre></td></tr></table></figure><p><code>ctrl+c</code>结束查看，可查看手机四个缓冲区日志，包括radio、system、main、event。</p><table><thead><tr><th align="center">缓冲区</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">radio</td><td align="center">存放通信的日志，比如通话短信</td></tr><tr><td align="center">system</td><td align="center">系统组件日志</td></tr><tr><td align="center">main</td><td align="center">手机的应用软件的日志</td></tr><tr><td align="center">event</td><td align="center">手机按键输出等事件日志</td></tr></tbody></table><p>不指定缓冲区的话，默认抓取system和main。<br>要指定缓冲区的话，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -b 缓冲区</span><br></pre></td></tr></table></figure><p>清理日志信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -c</span><br></pre></td></tr></table></figure><p>将日志信息输出到指定文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -b event &gt; E:\log.txt</span><br></pre></td></tr></table></figure><p>logcat是实时的，即在输出日志时操作软件，也可以实时更新日志。<br>日志文件查看：</p><table><thead><tr><th align="center">选项</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">D</td><td align="center">debug</td></tr><tr><td align="center">I</td><td align="center">info</td></tr><tr><td align="center">E</td><td align="center">error</td></tr><tr><td align="center">W</td><td align="center">warm</td></tr></tbody></table><p>只输出错误信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat *:E</span><br></pre></td></tr></table></figure><h3 id="adb通过WLAN连接到设备"><a href="#adb通过WLAN连接到设备" class="headerlink" title="adb通过WLAN连接到设备"></a>adb通过WLAN连接到设备</h3><ol><li><p>adb安装在pc电脑上，电脑与手机处于同一WLAN下，打开手机的<code>开发者选项</code>和<code>usb调试模式</code>，以下步骤用的是红米note8。</p></li><li><p>使用 USB 数据线将手机连接到电脑。</p></li><li><p>设置目标设备以监听端口 5555 上的 TCP/IP 连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb tcpip 5555</span><br></pre></td></tr></table></figure></li><li><p>断开数据线连接</p></li><li><p>找到设备的IP地址</p></li><li><p>通过IP地址连接到设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect IP地址:5555</span><br></pre></td></tr></table></figure></li><li><p>确认连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure></li><li><p>如果 adb 连接断开：<br>(1) 确保电脑仍与 Android 设备连接到同一个 WLAN 网络。<br>(2) 通过再次执行 adb connect 步骤重新连接。<br>(3) 如果上述操作未解决问题，重置 adb ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server</span><br></pre></td></tr></table></figure></li></ol><p>然后重头操作。</p><h3 id="adb帮助文档"><a href="#adb帮助文档" class="headerlink" title="adb帮助文档"></a>adb帮助文档</h3><p><a href="https://developer.android.google.cn/studio/command-line/adb" target="_blank" rel="noopener">https://developer.android.google.cn/studio/command-line/adb</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件测试工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
